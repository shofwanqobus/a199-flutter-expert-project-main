// Mocks generated by Mockito 5.0.8 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:dartz/dartz.dart' as _i2;
import 'package:core/core.dart' as _i8;
import 'package:core/data/datasources/db/database_helper.dart' as _i15;
import 'package:core/data/datasources/tv_local_data_source.dart' as _i13;
import 'package:core/data/datasources/tv_remote_data_source.dart' as _i11;
import 'package:core/data/models/tv/tv_detail_model.dart' as _i3;
import 'package:core/data/models/tv/tv_model.dart' as _i12;
import 'package:core/data/models/tv/tv_table.dart' as _i14;
import 'package:core/domain/entities/tv/tv.dart' as _i9;
import 'package:core/domain/entities/tv/tv_detail.dart' as _i10;
import 'package:core/domain/repositories/tv_repository.dart' as _i6;
import 'package:http/src/base_request.dart' as _i20;
import 'package:http/io_client.dart' as _i17;
import 'package:http/src/response.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_sqlcipher/sqflite.dart' as _i16;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTvDetailResponse extends _i1.Fake implements _i3.TvDetailResponse {}

class _FakeResponse extends _i1.Fake implements _i4.Response {}

class _FakeIOStreamedResponse extends _i1.Fake
    implements _i17.IOStreamedResponse {}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i6.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getNowPlayingTvs() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvs, []),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getPopularTvs() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvs, []),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvs, []),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.TVDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue: Future<_i2.Either<_i8.Failure, _i10.TVDetail>>.value(
                  _FakeEither<_i8.Failure, _i10.TVDetail>()))
          as _i7.Future<_i2.Either<_i8.Failure, _i10.TVDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> searchTvs(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvs, [query]),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i10.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i10.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i8.Failure, String>>.value(
                  _FakeEither<_i8.Failure, String>()))
          as _i7.Future<_i2.Either<_i8.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>> getWatchlistTvs() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvs, []),
              returnValue: Future<_i2.Either<_i8.Failure, List<_i9.TV>>>.value(
                  _FakeEither<_i8.Failure, List<_i9.TV>>()))
          as _i7.Future<_i2.Either<_i8.Failure, List<_i9.TV>>>);
}

/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRemoteDataSource extends _i1.Mock
    implements _i11.TVRemoteDataSource {
  MockTVRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i12.TVModel>> getNowPlayingTVs() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTVs, []),
              returnValue: Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]))
          as _i7.Future<List<_i12.TVModel>>);
  @override
  _i7.Future<List<_i12.TVModel>> getPopularTVs() =>
      (super.noSuchMethod(Invocation.method(#getPopularTVs, []),
              returnValue: Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]))
          as _i7.Future<List<_i12.TVModel>>);
  @override
  _i7.Future<List<_i12.TVModel>> getTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvs, []),
              returnValue: Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]))
          as _i7.Future<List<_i12.TVModel>>);
  @override
  _i7.Future<_i3.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue:
                  Future<_i3.TvDetailResponse>.value(_FakeTvDetailResponse()))
          as _i7.Future<_i3.TvDetailResponse>);
  @override
  _i7.Future<List<_i12.TVModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue: Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]))
          as _i7.Future<List<_i12.TVModel>>);
  @override
  _i7.Future<List<_i12.TVModel>> searchTVs(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTVs, [query]),
              returnValue: Future<List<_i12.TVModel>>.value(<_i12.TVModel>[]))
          as _i7.Future<List<_i12.TVModel>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVLocalDataSource extends _i1.Mock implements _i13.TVLocalDataSource {
  MockTVLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchListTV(_i14.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchListTV, [tv]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchListTV(_i14.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchListTV, [tv]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i14.TVTable?> getTvById(int? id) => (super.noSuchMethod(
      Invocation.method(#getTvById, [id]),
      returnValue: Future<_i14.TVTable?>.value()) as _i7.Future<_i14.TVTable?>);
  @override
  _i7.Future<List<_i14.TVTable>> getWatchlistTv() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTv, []),
              returnValue: Future<List<_i14.TVTable>>.value(<_i14.TVTable>[]))
          as _i7.Future<List<_i14.TVTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i15.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i16.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i16.Database?>.value())
          as _i7.Future<_i16.Database?>);
  @override
  _i7.Future<int> insertWatchlistTV(_i14.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlistTV, [tv]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlistTV(_i14.TVTable? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTV, [tv]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTv() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTv, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i17.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i19.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i19.Uint8List>.value(_i19.Uint8List(0)))
          as _i7.Future<_i19.Uint8List>);
  @override
  _i7.Future<_i17.IOStreamedResponse> send(_i20.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: Future<_i17.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse()))
          as _i7.Future<_i17.IOStreamedResponse>);
  @override
  String toString() => super.toString();
}
