// Mocks generated by Mockito 5.0.8 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:core/core.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;

import 'package:http/src/base_request.dart' as _i16;
import 'package:http/src/io_client.dart' as _i13;
import 'package:http/src/io_streamed_response.dart' as _i3;
import 'package:http/src/response.dart' as _i4;

import 'package:mockito/mockito.dart' as _i1;

import 'package:core/domain/entities/movies/movie.dart' as _i9;
import 'package:core/domain/entities/movies/movie_detail.dart' as _i10;
import 'package:core/domain/repositories/movie_repository.dart' as _i7;
import 'package:core/domain/entities/tv/tv.dart' as _i11;
import 'package:core/domain/entities/tv/tv_detail.dart' as _i12;
import 'package:core/domain/repositories/tv_repository.dart' as _i14;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeResponse extends _i1.Fake implements _i4.Response {}

class _FakeIOStreamedResponse extends _i1.Fake
    implements _i3.IOStreamedResponse {}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i7.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, _i10.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, _i10.MovieDetail>>.value(
              _FakeEither<_i5.Failure, _i10.MovieDetail>())) as _i7
          .Future<_i2.Either<_i5.Failure, _i10.MovieDetail>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, String>> saveWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither<_i5.Failure, String>()))
          as _i7.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, String>> removeWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither<_i5.Failure, String>()))
          as _i7.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i9.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>.value(
              _FakeEither<_i5.Failure, List<_i9.Movie>>())) as _i7
          .Future<_i2.Either<_i5.Failure, List<_i9.Movie>>>);
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i14.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> getNowPlayingTvs() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTVs, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> getPopularTvs() =>
      (super.noSuchMethod(Invocation.method(#getPopularTVs, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> getTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTVs, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, _i12.TVDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVDetail, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, _i12.TVDetail>>.value(
                  _FakeEither<_i5.Failure, _i12.TVDetail>()))
          as _i7.Future<_i2.Either<_i5.Failure, _i12.TVDetail>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVRecommendations, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> searchTvs(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTVs, [query]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, String>> saveWatchlist(
          _i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither<_i5.Failure, String>()))
          as _i7.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, String>> removeWatchlist(
          _i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTV, [tv]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither<_i5.Failure, String>()))
          as _i7.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>> getWatchlistTvs() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTVs, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i11.TV>>>.value(
                  _FakeEither<_i5.Failure, List<_i11.TV>>()))
          as _i7.Future<_i2.Either<_i5.Failure, List<_i11.TV>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i13.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.IOStreamedResponse> send(_i16.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: Future<_i3.IOStreamedResponse>.value(
                  _FakeIOStreamedResponse()))
          as _i7.Future<_i3.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i7.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i19.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i19.Uint8List>.value(_i19.Uint8List(0)))
          as _i7.Future<_i19.Uint8List>);
  @override
  String toString() => super.toString();
}
